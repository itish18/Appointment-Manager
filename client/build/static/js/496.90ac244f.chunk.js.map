{"version":3,"file":"static/js/496.90ac244f.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Fade/Fade.js","../node_modules/@mui/material/Grow/Grow.js","../node_modules/@mui/material/styles/useTheme.js","../node_modules/@mui/material/transitions/utils.js","../node_modules/@mui/material/utils/debounce.js","../node_modules/@mui/material/utils/ownerWindow.js","../node_modules/@mui/utils/esm/debounce.js","../node_modules/@mui/utils/esm/ownerDocument.js","../node_modules/@mui/utils/esm/ownerWindow.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"addEndListener\", \"appear\", \"children\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@mui/utils';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst styles = {\n  entering: {\n    opacity: 1\n  },\n  entered: {\n    opacity: 1\n  }\n};\n/**\n * The Fade transition is used by the [Modal](/components/modal/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Fade = /*#__PURE__*/React.forwardRef(function Fade(props, ref) {\n  const theme = useTheme();\n  const defaultTimeout = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n\n  const {\n    addEndListener,\n    appear = true,\n    children,\n    easing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const enableStrictModeCompat = true;\n  const nodeRef = React.useRef(null);\n  const foreignRef = useForkRef(children.ref, ref);\n  const handleRef = useForkRef(nodeRef, foreignRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node); // So the animation always start from the start.\n\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);\n    node.style.transition = theme.transitions.create('opacity', transitionProps);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);\n    node.style.transition = theme.transitions.create('opacity', transitionProps);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n\n  const handleAddEndListener = next => {\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    appear: appear,\n    in: inProp,\n    nodeRef: enableStrictModeCompat ? nodeRef : undefined,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    timeout: timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/React.cloneElement(children, _extends({\n        style: _extends({\n          opacity: 0,\n          visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n        }, styles[state], style, children.props.style),\n        ref: handleRef\n      }, childProps));\n    }\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fade.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Fade;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"addEndListener\", \"appear\", \"children\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef } from '@mui/utils';\nimport { Transition } from 'react-transition-group';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps, reflow } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getScale(value) {\n  return `scale(${value}, ${value ** 2})`;\n}\n\nconst styles = {\n  entering: {\n    opacity: 1,\n    transform: getScale(1)\n  },\n  entered: {\n    opacity: 1,\n    transform: 'none'\n  }\n};\n/**\n * Conditionally apply a workaround for the CSS transition bug in Safari 15.4.\n * Remove this workaround once the Safari bug is fixed.\n */\n\nconst isSafari154 = typeof navigator !== 'undefined' && /^((?!chrome|android).)*safari/i.test(navigator.userAgent) && /version\\/15\\.[4-9]/i.test(navigator.userAgent);\n/**\n * The Grow transition is used by the [Tooltip](/components/tooltips/) and\n * [Popover](/components/popover/) components.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Grow = /*#__PURE__*/React.forwardRef(function Grow(props, ref) {\n  const {\n    addEndListener,\n    appear = true,\n    children,\n    easing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = 'auto',\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const timer = React.useRef();\n  const autoTimeout = React.useRef();\n  const theme = useTheme();\n  const nodeRef = React.useRef(null);\n  const foreignRef = useForkRef(children.ref, ref);\n  const handleRef = useForkRef(nodeRef, foreignRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node); // So the animation always start from the start.\n\n    const {\n      duration: transitionDuration,\n      delay,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n    let duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration,\n      delay\n    }), theme.transitions.create('transform', {\n      duration: isSafari154 ? duration : duration * 0.666,\n      delay,\n      easing: transitionTimingFunction\n    })].join(',');\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const {\n      duration: transitionDuration,\n      delay,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n    let duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration,\n      delay\n    }), theme.transitions.create('transform', {\n      duration: isSafari154 ? duration : duration * 0.666,\n      delay: isSafari154 ? delay : delay || duration * 0.333,\n      easing: transitionTimingFunction\n    })].join(',');\n    node.style.opacity = 0;\n    node.style.transform = getScale(0.75);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n\n  const handleAddEndListener = next => {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTimeout.current || 0);\n    }\n\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    appear: appear,\n    in: inProp,\n    nodeRef: nodeRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/React.cloneElement(children, _extends({\n        style: _extends({\n          opacity: 0,\n          transform: getScale(0.75),\n          visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n        }, styles[state], style, children.props.style),\n        ref: handleRef\n      }, childProps));\n    }\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grow.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default 'auto'\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nGrow.muiSupportAuto = true;\nexport default Grow;","import * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}","export const reflow = node => node.scrollTop;\nexport function getTransitionProps(props, options) {\n  var _style$transitionDura, _style$transitionTimi;\n\n  const {\n    timeout,\n    easing,\n    style = {}\n  } = props;\n  return {\n    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === 'object' ? easing[options.mode] : easing,\n    delay: style.transitionDelay\n  };\n}","import { unstable_debounce as debounce } from '@mui/utils';\nexport default debounce;","import { unstable_ownerWindow as ownerWindow } from '@mui/utils';\nexport default ownerWindow;","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func, wait = 166) {\n  let timeout;\n\n  function debounced(...args) {\n    const later = () => {\n      func.apply(this, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = () => {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import ownerDocument from './ownerDocument';\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;"],"names":["_excluded","styles","entering","opacity","entered","Fade","React","props","ref","theme","useTheme","defaultTimeout","enter","transitions","duration","enteringScreen","exit","leavingScreen","addEndListener","appear","children","easing","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent","Transition","other","_objectWithoutPropertiesLoose","nodeRef","foreignRef","useForkRef","handleRef","normalizedTransitionCallback","callback","maybeIsAppearing","node","current","undefined","handleEntering","handleEnter","isAppearing","reflow","transitionProps","getTransitionProps","mode","webkitTransition","create","transition","handleEntered","handleExiting","handleExit","handleExited","_jsx","_extends","next","state","childProps","visibility","getScale","value","transform","isSafari154","navigator","test","userAgent","Grow","timer","autoTimeout","transitionDuration","delay","transitionTimingFunction","getAutoHeightDuration","clientHeight","join","clearTimeout","setTimeout","muiSupportAuto","useThemeSystem","defaultTheme","scrollTop","options","_style$transitionDura","_style$transitionTimi","transitionDelay","debounce","ownerWindow","func","wait","debounced","args","later","apply","clear","ownerDocument","document","defaultView","window","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","_React$Component","context","_this","call","this","initialStatus","isMounting","appearStatus","unmountOnExit","mountOnEnter","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","ReactDOM","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onTransitionEnd","_this3","cancel","nextState","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","_ref3","maybeNextCallback","render","_this$props","TransitionGroupContext","noop","contextType","propTypes","defaultProps"],"sourceRoot":""}